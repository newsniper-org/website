---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime, maybe } from "@lib/utils";
import BackToPrevious from "@components/BackToPrevious.astro";
import PostNavigation from "@components/PostNavigation.astro";
import TableOfContents from "@components/TableOfContents.astro";
import Talkyard from "@components/Talkyard.astro";
import Tag from "@components/Tag.astro";
import { getEntry } from "astro:content";

const {slug} = Astro.params

if (!slug) {
  return Astro.redirect("/article")
}

const posts = await getCollection("article");

function getNextPost() {
  let postIndex;
  for (const post of posts) {
    if (post.id === Astro.params.slug) {
      postIndex = posts.indexOf(post);
      return posts[postIndex + 1];
    }
  }
}

function getPrevPost() {
  let postIndex;
  for (const post of posts) {
    if (post.id === Astro.params.slug) {
      postIndex = posts.indexOf(post);
      return posts[postIndex - 1];
    }
  }
}

const nextPost = getNextPost();
const prevPost = getPrevPost();

const post = await getEntry('article',slug);

if (!post) {
  return Astro.redirect("/404")
}

const series = await maybe(async (ser) => await getEntry("series", ser), post.data.series)
const { Content, headings } = await render(post);
---

<Layout title={post.data.title} description={post.data.description}>
  <Container>
    <div class="animate">
      <BackToPrevious href="/article">Back to articles index page</BackToPrevious>
    </div>
    <div class="my-10 space-y-1">
      <div class="animate flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={post.data.date} />
        </div>
        &bull;
        <div class="font-base text-sm">
          {readingTime(post.body ?? "")}
        </div>
      </div>
      <br/>
      <h1 class="animate text-3xl font-bold text-black dark:text-white">
        {post.data.title}
      </h1>
      <br/>
      <h2 class="animate text-xl font-semibold text-black dark:text-white">
        {post.data.description}
      </h2>
      <br/>
      {series !== undefined && <div class="animate" style="display:flexbox">
        <p class="font-semibold text-black dark:text-white">Series</p>
        <Tag type="series" tag={series.id} tagTitle={series?.data.title} />
      </div>}
      {post.data.categories.length > 0 && <div style="display: flex">
        <p class="font-semibold text-black dark:text-white">{post.data.categories.length > 1 ? "Categories" : "Category"}</p>
        {post.data.categories.map((category) => <Tag type="category" tag={category} />)}
      </div>}
      {post.data.keywords.length > 0 && <div style="display: flex">
        <p class="font-semibold text-black dark:text-white">{post.data.keywords.length > 1 ? "Keywords" : "Keyword"}</p>
        {post.data.keywords.map((keyword) => <Tag type="keyword" tag={keyword} />)}
      </div>}
    </div>
    
    <article class="animate">
      <Content />
      <div class="mt-24">
        <PostNavigation prevPost={prevPost} nextPost={nextPost} />
      </div>
      <div class="mt-24">
        <Talkyard discussionId={`article/${post.id}`}/>
      </div>
    </article>
  </Container>
</Layout>
